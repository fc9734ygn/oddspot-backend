CREATE TABLE IF NOT EXISTS spot (
    id SERIAL PRIMARY KEY,
    title TEXT NOT NULL,
    description TEXT NOT NULL,
    latitude REAL NOT NULL,
    longitude REAL NOT NULL,
    creator_id TEXT NOT NULL,
    picture_url TEXT NOT NULL,
    create_time BIGINT NOT NULL,
    verification_state TEXT NOT NULL DEFAULT 'submitted',
    category TEXT NOT NULL,
    difficulty INTEGER NOT NULL,
    is_active BOOL NOT NULL,
    isArea BOOLEAN NOT NULL,
    FOREIGN KEY (creator_id) REFERENCES "user"(id)
);

insert:
INSERT INTO spot (title,description, latitude, longitude, creator_id, picture_url, create_time, verification_state, category, difficulty, is_active, isArea)
VALUES (?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?) RETURNING id;

selectAllWhereIsActiveAndVerificationState:
SELECT * FROM spot WHERE is_active = ? AND verification_state = ?;

selectById:
SELECT * FROM spot WHERE id = ? LIMIT 1;

selectAllActiveSpotsWithVisitsAndVerificationState:
SELECT spot.*, visit.*
FROM spot
LEFT JOIN visit ON spot.id = visit.spot_id
WHERE spot.is_active = ?
AND spot.verification_state = ?;

selectAllWhereCreatorId:
SELECT * FROM spot WHERE creator_id = ?;

updateSpotsForDeletedUser:
UPDATE spot
SET creator_id = ?
WHERE creator_id = ?;
